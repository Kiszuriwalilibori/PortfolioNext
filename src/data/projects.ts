import { Project } from "@/types";

export const projects: Project[] = [
    {
        ID: "1",
        title: "PortfolioNext",
        slug: "portfolio-next",
        description: "The most and only current portfolio",
        story: "Every human work can bear the footprints of its creator. In this case, it is also true. Have you seen other portfolios of mine? Dance, music, and so on. Now you've got something really different. Why? Many headhunters felt that the previous ones were over-individuated. So, here you have something calm, official, and almost toneless, which should satisfy everyone. Let'ss call it a bridge portfolio - it is a bridge between headhunters and me.",
        longDescription: [
            " That is my first job with Next.js and the Vercel hosting platform.",
            " It is coded with 13.x Next.js version, but I decided to leave experimental features aside for a moment.",
            " Now users are allowed to add and remove comments to projects, providing one have Google account.",
            " Comments are validated agains abusive content with PERSPECTIVE",
        ],
        live: "https://portfolio-next-ten-sigma.vercel.app/",
        github: "https://github.com/Kiszuriwalilibori/PortfolioNext",
        features: ["react", "material-ui", "next", "SSR", "typescript", "firebase", "firestore", "GoogleOAuth"],
        category: "A",
        slides: ["/images/project_images/next1.jpg", "/images/project_images/next2.jpg"],
    },

    {
        ID: "2",
        title: "Minifigs",
        slug: "minifigs",
        description: "Get your own Harry Potter for free ðŸ˜‰",
        story: "Have you ever dreamt that with just a few clicks you could become a happy owner of Harry Potter figurine? Surely, you haven't. And now I've made it happen. Of course not me alone, the site owners have biggest and primary contribution, there is no doubt about it. My role was to create a page where users could request a free bonus Harry Potter minifig from online store of https://rebrickable.com/.  Why just Harry Potter? It remains a sweet secret of the hiring company staff. Currently, the programme strictly follows the task requirement of selecting HP; however, in the coming weeks, I hope to include a selection tool for individuals who do not like the Young Wizard from Hogwarts.",
        longDescription: [
            " The hardest aspect was retrieving data. Rebrickable had only recently launched V2 version of their API and one could not get what needed with just a single request. One must fetch data pages one by one and extract HP-related records. Furthermore, admin imposed restrictions in requests rate, what altogether makes the application needs more then 1 minute to collect all data. Considering the foregoing, as well as the fact that each set held also vital elements of its successor URL, I decided to write a custom thunk function based on Axios.",
            " To keep the client waiting so long, I have decided to add the functionality of displaying both set number and latest figurine.",
            " Initially, three figurines are drawn from the fetched set, and it's up to the customer to choose one. Having that done, user is taken to a third page with detailed description of the figurine's parts and promted to provide dispatch details. The entered data is subject to rigorous validation using powers of react-hook-form. After auspicious validation, the request with both customer and figurine details packed with FormData is sent to the fake API, and if processed OK, an adequate message is displayed.",
            " As the app, in general, displays images, there is logic in place to wait for all of them to load before displaying them in order to avoid screen blinking. The data on each page is kept persistent allowing users to navigate between the pages without losing content. ",
            " The application requires an API key, which presence is checked at an early stage to prevent consequent errors. That may appear redundant, but it is useful if someone copies the repository content and builds app in their own environment.",
            " The software is designed relatively persistent to avoid loosing long-fetching data when navigating between pages",
            " For the future: now that app follows strictly task requirement of selecting HP. I'd like to add selection options.",
        ],
        live: "https://kiszuriwalilibori.github.io/minifigs/",
        github: "https://github.com/Kiszuriwalilibori/minifigs",
        features: ["react", "redux", "redux-persist", "react-router", "axios", "redux-thunk", "react-hook-form", "typescript", "web workers"],
        category: "A",
        slides: ["/images/project_images/harry.jpg", "/images/project_images/harry2.jpg"],
    },
    {
        ID: "3",
        title: "Unsplash",
        slug: "unsplash",
        description: "Browses and presents Unsplash resources",
        story: "I believed that one Unsplash site is enough, but apparently some guys do not share my view and requested prepare new thought similar version before consider joining their honourable company. So, I had no way out. Some logic is disregarded (contacted Unsplash staff in order to understand business logics behind some features, but answered me kindly to mind my own business). Then, you receive an imitation and not a copy. For example, trending search terms are hardcoded and not dynamically generated in any sense. The background image is just a random nature one.",
        longDescription: [
            "The objective behind the app (recruitment challenge) was to create something that, in terms of style and functionality, resembled the original Unsplash.",
            "The first page form has slightly different logic than the original one, but it works as required by the hiring company.",
            "The search results page's content is paginated. There is a cursor position sensor that checks if there is still available content and, if so, fetches it,  otherwise it indicates that all data has been acquired.To prevent blinking, the first set of photos waits for all of them to be loaded before displaying them; the following sets are lazy loaded.",
            "When you click on the image the modal with enlarged picture and detailed data appears.",
            "The application requires an API key, which presence is checked at an early stage to prevent consequent errors. That may appear redundant, but it is useful if someone copies the repository content and builds app in their own environment.",
            "BTW: it resembles not the most recent Unsplash, but the one from a few years back.",
        ],
        live: "https://kiszuriwalilibori.github.io/unsplash/",
        github: "https://github.com/Kiszuriwalilibori/unsplash",
        features: ["react", "redux", "unsplash", "redux-persist", "typescript", "react-hook-form", "web-sockets"],
        category: "A",
        slides: ["/images/project_images/unsplash4.jpg"],
    },
    {
        ID: "4",
        title: "Cryptocurrency Tracker",
        slug: "cryptocurrency-tracker",
        description: "Cryptocurrency tracker that updates with programmed intervals",
        story: "Most people enjoy making investments, selling, buying and all that staff. If you are one of these people, that app is just for you. Crypto Currency Tracker displays the most accurate live prices from the world's most trusted cryptocurrency exchanges. This app connects to the crypto-compare API. It fetches available cryptocurrencies list initially and permits create its pair with PLN, USD, or EUR. Then one can watch changes in 3-seconds intervals. Given is current price as well as both absolute values and percentile change for 1 day, 1 month, 5 months, 12 months, 30 months, and a year. Changes are not only visible in the table, but also signalled by pop-up with adequate message",
        longDescription: [
            "This app connects with crypto-compare API. It first obtains a list of accessible cryptocurrencies and allows you to match it with PLN, USD, or EUR.",
            "Then one can observe real time changes due to Web Sockets conection. The current price is shown, as well as absolute values and percentile changes for one day, one month, five months, twelve months, thirty months, and one year.Changes are not only displayed in the table, but also indicated by a pop-up with adequate message.",
            "While basic npm packages that subscribe to the data source directly are already available, this app makes direct and immediate API calls.",
            "The List of available cryptos is fetched and stored via React Query.",
            "Similarly, React-Query refetching capability serves to obtain current crypto price with a 3-second interval.",
            "Historical prices are fetched initially once, but the app checks every 3s to see whether current date has changed or not. Also, historical data is refreshed with each new day .",
            "Fetching error or unexpected result (such as empty data) are handled within fetching script or hook with notistack notifications. This script encapsulates error messaging, so no application-wide error handling is required.",
            "The Data, if not kept by React-Query, is kept in local storage to make it continuously available in  the event of page refresh",
            "Future plans include making the software more customisable, user could be entitled to modify intervals, for example.",
        ],
        live: "https://kiszuriwalilibori.github.io/cryptocurrency/",
        github: "https://github.com/Kiszuriwalilibori/cryptocurrency",
        features: ["react", "react-query", "react-router", "context", "notistack", "material-ui", "typescript", "react-virtualized-select", "local storage"],
        category: "A",
        slides: ["/images/project_images/cryptocurrency.jpg", "/images/project_images/cryptocurrency2.jpg"],
    },
    {
        ID: "5",
        title: "Chat",
        slug: "fake-chat",
        story: "Do you think you desperately need to talk to anyone, no matter whom? If so that app is just for you (or rather, it will be soon). It is connected to random-user generating API. You'll get ten people for your select - there will be fair amount of details presented (you can take all of them if you wish, though), and then you can start 'conversation'. Yes, 'conversation', the app is still on the level of recruiting company requirements what precisely means, that the only thing you can hear from your new friends is `You said...(and here goes your statement)`. In the coming future the app will be connected to AI chat terminal, however.",
        description: "Fake chat with even more fake persons",
        longDescription: [
            "The app is connected to random-user generating API with custom hook, as well as to speech-recognition facility. Initially, it generates the set of ten fake users. Then, customer can start 'chat' with chosen ones. As it is fake chat and not the real one, the only answer is 'You said...' and that answer is received with natural-like irregular delay.",
            "The app also presents active interlocutor details.",
            "Active interlocutors are distinguishable from non-active by visual identifiers. In the dialogue box there is also their image. One can switch between them and keep up to ten chats simultaneously.",
            "The time gap from the last activity is shown.",
            "Beside standard text, one can use emoticons while messaging. Moreover, it is now capable to transcript human voice to text",
            "Version 1.1.1: Now with voice input feature",
            "For the future: the app might be connected to any AI interface. That was bright idea and even some steps has been done. Unfortunately,my GPTChat key has been blocked for unclear reasons what practically puts the idea on hold until find another AI platform with public API.",
        ],
        live: "https://kiszuriwalilibori.github.io/FakeChat/",
        github: "https://github.com/Kiszuriwalilibori/FakeChat",
        features: ["react", "material-ui", "typescript", "redux-thunk", "redux", "AI", "speech-recognition"],
        category: "A",
        slides: ["/images/project_images/chat.jpg"],
    },
    {
        ID: "6",
        title: "Floydian Portfolio",
        slug: "floydian-portfolio",
        description: "The Dark Side of the Moon or my very old portfolio (possibly with some dead links)",
        longDescription: ["This is an old portfolio of mine, developed before fell in love in React.", "Pug permits reusing code and keep it reasonably simple"],
        story: "Have you ever heard or read that work reflects (or should reflect) its creator? More than often, yeah. Me too. This portfolio (being also my first portfolio and one of firsts web pages) is influenced by Pink Floyd. The welcome image alludes to the cover of the famous 'The Dark Side of the Moon' album. So does the title font (precisely, it is similar to the one from 'The Wall'). Yes, your guess is right - it's my favourite band ever. Also, the image puts folks in the mood of mystery and you almost hear `Set the Controls for the Heart of the Sun.` ",
        live: "https://kiszuriwalilibori.github.io/Portfolio_Archiwalne_1/",
        github: "https://github.com/Kiszuriwalilibori/Portfolio_Archiwalne_1",
        features: ["HTML-only", "Pug", "Gulp"],
        category: "B",
        slides: ["/images/project_images/arch1.jpg", "/images/project_images/arch12.jpg"],
    },
    {
        ID: "7",
        title: "Space Portfolio",
        slug: "space-portfolio",
        description: "Ticket to the moon or my old, unused and not maintained portfolio (may contain dead links)",
        longDescription: ["This is another old portfolio of mine, developed before fell in love in React.", "I have Applied Granim library for smoothier animations", "Pug permits reusing code and keep ot reasonably simple"],
        live: "https://kiszuriwalilibori.github.io/Portfolio_Archiwalne_2",
        github: "https://github.com/Kiszuriwalilibori/Portfolio_Archiwalne_1",
        features: ["HTML-only", "Granim", "jQuery", "Gulp", "Pug"],
        category: "B",
        slides: ["/images/project_images/arch2.jpg", "/images/project_images/arch22.jpg"],
        story: "Have you ever been to the Moon? If not, maybe your time is coming. Another portfolio of mine keeps mystery mood. Also, it gives an insight into my sense of aesthetics. Yes, I like dimmed, dark colours. Neon lights are also more than welcome. So, welcome to the machine, it is time to get a trip. ",
    },
    {
        ID: "8",
        title: "Physioterapy",
        slug: "physioterapy-clinic",
        story: "Once I had an assignment from physioterapeutical company. Finally, what they got is very much different and developed with other stack, but first version is still OK. One can find many useful information about company profile (however, in the version you see the content is a foo text, merely one level above Lorem Ipsum) and send message. As all works in that section, this piece of code is neither maintained nor updated.",
        description: "My old, unused and not maintained web site of physioterapeutist's office",
        longDescription: ["Web site of physioterapy unit", "Applied GSAP library for smooth animations", "Pug permits reusing code and keep ot reasonably simple"],
        live: "https://kiszuriwalilibori.github.io/Portfolio_Archiwalne_2",
        github: "https://github.com/Kiszuriwalilibori/Portfolio_Archiwalne_1",
        features: ["HTML-only", "GSAP", "jQuery", "Gulp", "Pug", "sprites"],
        category: "B",
        slides: ["/images/project_images/fizjo.jpg", "/images/project_images/fizjo2.jpg", "/images/project_images/fizjo3.jpg"],
    },
    {
        ID: "9",
        title: "Athletes",
        slug: "athletes",
        description: "Surprising facts about hidden potential of few athletes",
        story: "Whether you are an athlete or not, I guess you heard a lot about sport stars. One usually knows what a given sport champion IS good in, but usually not what he/she COULD BE good. This app rates certain factors as per physical capabilities and gives - often surprising - suggestions.",
        longDescription: ["This is perhaps my first React app. A long time unattended and unmaintained", "The app works, so you can check it out, but you would be better off leaving the code unseen."],
        live: "https://kiszuriwalilibori.github.io/Athletes/",
        github: "https://github.com/Kiszuriwalilibori/Athletes",
        features: ["react", "react-bootstrap"],
        category: "B",
        slides: ["/images/project_images/athletes.jpg", "/images/project_images/athletes2.jpg"],
    },
    {
        ID: "10",
        title: "Weather Forecast",
        slug: "weather-forecast",
        description: "Just the tiny forecasting application that is loaded with extra powers",
        story: "If you travel a lot, then this app is just for you. In order to pack up appropriate clothing, one can not only see weather in any point on the Earth (identified by city name or geo-coordinates), but also compare it with weather in his current or whatever location. One can also maintain a convenient storage facility by storing data pertaining to significant locations.",
        longDescription: [
            "This app displays basic weather data in location identified by city name, geocoordinates or by actual client's device position",
            "There is option of storing locations in local storage",
            "One can see current weather, the forecast, or compare wearther conditions between locations.",
            "UseLocalStorage from the usehooks-ts package is used to keep data in local storage in case of a page refresh.",
            "Data is usually fetched with hooks based on Axios, but with additional functionalities of validation and error handling (notistack)",
            "Season-sensitive, somewhat random wallpaper from Unsplash is available.",
            "Version 0.2.0 adds full bilingual functionality.",
        ],
        live: "https://kiszuriwalilibori.github.io/pogodynka/",
        github: "https://github.com/Kiszuriwalilibori/pogodynka",
        features: ["react", "redux", "MUI X Data Grid", "material-ui", "formik", "notistack", "yup", "redux-thunk", "axios", "i18n", "bilingual"],
        category: "A",
        slides: ["/images/project_images/weather.jpg", "/images/project_images/weather2.jpg"],
    },
    {
        ID: "11",
        title: "YouTube Player",
        slug: "youtube-player",
        description: "Simplified You Tube player. ",
        story: "I had applied to work at a media company once, and the entry task description involved media.. A goal was to achieve an appearance that was somewhat similar to the original.",
        longDescription: [
            "This is a basic You Tube player that lets you select the genre of the movie.",
            "With respect to top bar, achieving the goal was surprisingly difficult and necessitated the use of a sophisticated resize-control system.Even so, it performs better with Chrome.",
            "The sidebar and top bar feature miniatures, the number of which is also responsive.",
            "The app requires login (check in the README for the password) and follows the permitted routes pattern.",
            "Version 1.0.4: Now includes voice input for video genre.",
        ],
        live: "https://kiszuriwalilibori.github.io/youtube/",
        github: "https://github.com/Kiszuriwalilibori/youtube",
        features: ["react", "react-router", "react-hook-form", "redux", "redux-thunk", "axios", "speech-recognition"],
        category: "A",
        slides: ["/images/project_images/youtube.jpg", "/images/project_images/youtube2.jpg"],
    },
    {
        ID: "12",
        title: "Google Books Finder",
        slug: "google-books-finder",
        story: "One day, while frantically working through an online Java Scripts course, I made the decision to take the author's advice and create an application that can retrieve any data from any public API. You know, I was just starting out in the IT field, and I thought the assignment was both challenging and not overly complicated. I've wandered through the list of accessible APIs and have chosen to begin with Google Books. That is how one of my most fascinating adventures begun. The app is not as logical and coherent as it could be because I experimented a lot of different programming techniques there.  It was quite little and simple at first, but it ended up being rather sophisticated. New features has appeared one after another. In the end, there is an app that searches for books based on specified parameters, sorts and filters the results, removes books from both the retrieve and display results, generates a local temporary storage, and much more. So - if you enjoy reading books, have a fun ;) ",
        description: "Finds books in Google Books resources and performs multiple actions with the found data.",
        longDescription: [
            "The Google Books resource browser application. Books can be selected based on the name, author, and label.",
            "Results can be sorted and filtered according to the author, language, title, subtitle, labels, and year of publication.",
            "It allows local favourites to be created, provides shop access and provides book details.",
            "It is paginated, and neatly styled with material-ui",
            "My approach involves applying a recursive continuous fetching thunk, which takes longer than a single step fetch because the admin restricts the number of book records that can be fetched in a single fetch and I don't know how many entries are actually available.",
        ],
        live: "https://kiszuriwalilibori.github.io/books/",
        github: "https://github.com/Kiszuriwalilibori/books",
        features: ["react", "typescript", "redux", "axios", "react-query", "formik", "saga", "jest", "web workers"],
        category: "A",
        slides: ["/images/project_images/gbfinder2.jpg", "/images/project_images/gbfinder3.jpg"],
    },
    {
        ID: "13",
        title: "Firebase",
        slug: "firebase-application",
        story: "Certain applications perform admirably, some satisfy somebody's needs,  still others show evidence of somebody's vanity, still others  support company, industry sector, country, etc. Not this particular one. This is purely the training or playground area of Firebase. You see, I work as a front-end developer, but I believe having some understanding of the back-end could be helpful.",
        description: "Uses a Firebase instance to store and retrieve foo data",
        longDescription: [
            "This is my Firebase-connected application that collects basic foo users data. Validation is required.",
            "In order to add user records, it requests authentication using a Google account.There is, however, a cap on the amount of stored users.",
            "Only the users that the user created by himself can be removed.",
            "Simple operations (such as sorting) are also supported.",
        ],
        live: "https://kiszuriwalilibori.github.io/firebase/",
        github: "https://github.com/Kiszuriwalilibori/firebase",
        features: ["react", "notistack", "material-ui", "formik", "firebase", "styled-components", "typescript"],
        category: "A",
        slides: ["/images/project_images/firebase.jpg"],
    },

    {
        ID: "14",
        title: "Decision Tree",
        slug: "decision-tree-builder",
        story: "Sometimes I can't figure out what was going through the recruiter's mind when she/he puts up a certain task.  This is nothing more than a simple decision tree or equivalent diagram example. Nothing spectacular, I had to add some styling as the initial version made purely up to requirements was rather minimalistic. Oops, you can add and remove nodes and that is all. There are also some protective methods in place to prevent duplicate entries. Latest version is with Zustand, and has unlimited depth of levels. The code is almost entirely rewritten.",
        description: "Decision tree application interface",
        longDescription: ["An example of decision-tree building scheme"],
        live: "https://kiszuriwalilibori.github.io/tree/",
        github: "https://github.com/Kiszuriwalilibori/tree",
        features: ["react", "material-ui", "formik", "zustand", "typescript"],
        category: "A",
        slides: ["/images/project_images/tree.jpg"],
    },
    {
        ID: "15",
        title: "Dancer portfolio",
        slug: "dancer-portfolio",
        description: "Cheerful portfolio, slightly inspired by Bollywood",
        story: "Let us leave behind the two moody portfolios and just dance. The portfolio you are about to explore is cheery, colorfull and simply brilliant. Boys, elephants,and girls are all dancing to the beat. Only Pope is absent (yeah, it is a pretty common gif and I did have him here,, I can say, but after some emails with rather fierce threats I decided to let him go. Not this time, not the place yet.) By the way, I am not the fan of Bollywood indeed, but appreciate the enormous load of joy inherent in each of their productions. Join us, dance, and enjoy the work.",
        longDescription: ["The latest portfolio version to the one you're looking at just now. Interesting as a playground for Web Components only."],
        live: "https://kiszuriwalilibori-about-me.netlify.app",
        github: "https://github.com/Kiszuriwalilibori/portfolio",
        features: ["HTML-only", "CSS3", "JS", "Web Components", "PUG", "PWA", "Web Workers"],
        category: "B",
        slides: ["/images/project_images/dancer-portfolio.jpg", "/images/project_images/dancer-portfolio2.jpg"],
    },
];
